<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mapper.admin.goods">
	<!-- 리절트 맵 정의 -->	
	<resultMap id="goodsResult" type="goodsVO">
		<result property="goods_id" column="goods_id" />
		<result property="goods_title" column="goods_title" />
		
		<result property="goods_price" column="goods_price" />
 		<result property="goods_seller" column="goods_seller" />
		
		<result property="goods_status" column="goods_status" />
		<result property="goods_sales_price" column="goods_sales_price" />
		<result property="goods_delivery_date" column="goods_delivery_date" />
		
		<result property="goods_fileName" column="goods_fileName" />
		<result property="goods_sort" column="goods_sort" />
		
		<result property="goods_intro" column="goods_intro" />
	</resultMap>	

	<resultMap id="imageResult" type="ImageFileVO">
	   <result property="goods_id" column="goods_id" />
	   <result property="file_name" column="file_name" />
	   <result property="reg_id" column="reg_id" />
	   <result property="image_id" column="image_id" />
	   <result property="file_type" column="file_type" />
	   <result property="creDate" column="creDate" />
	</resultMap>
	
	<resultMap id="orderGoodsResult" type="OrderVO">
		<result property="order_id" column="order_id" />
		<result property="mem_id" column="mem_id" />
		<result property="goods_id" column="goods_id" />
		<result property="goods_title" column="goods_title" />
		<result property="goods_sales_price" column="goods_sales_price" />
		
		<result property="order_quantity" column="order_quantity" />
		<result property="order_rec_name" column="order_rec_name" />
		<result property="order_rec_hp1" column="order_rec_hp1" />
		<result property="order_rec_hp2" column="order_rec_hp2" />
		<result property="order_rec_hp3" column="order_rec_hp3" />
		
		<result property="order_rec_tel1" column="order_rec_tel1" />
		<result property="order_rec_tel2" column="order_rec_tel2" />
		<result property="order_rec_tel3" column="order_rec_tel3" />
		
		<result property="delivery_address" column="delivery_address" />
		<result property="delivery_message" column="delivery_message" />
		<result property="delivery_method" column="delivery_method" />
		
		<result property="order_pay_method" column="order_pay_method" />
		<result property="card_company_name" column="card_company_name" />
		<result property="card_pay_month" column="card_pay_month" />
		
		<result property="pay_orderer_hp_num" column="pay_orderer_hp_num" />
		<result property="order_time" column="order_time" />
		<result property="delivery_state" column="delivery_state" />
		
		<result property="file_Name" column="file_Name" />
	</resultMap>
	
		<!-- <selectKey> => 새 상품을 추가하기 전에 시퀀스에서 상품 번호를 먼저 가져옵니다. -->
	<insert id="insertNewGoods" parameterType="java.util.Map"   >
		<selectKey resultType="String" keyProperty="goods_id" order="BEFORE">
	    	select seq_goods_id.nextval from dual
	    </selectKey>
	    
	    <![CDATA[
		   insert into gogi_goods(
						                goods_id, 
						                goods_sort,
				                   		goods_name,
				                    	goods_seller,
										goods_price,
										goods_sales_price,
										goods_point,
										goods_delivery_date,
										goods_status,
										goods_intro
										)
					  			values(
					  			       #{goods_id},
					  			       #{goods_sort},
					  			       #{goods_name},
					  			       #{goods_seller},
					  			       #{goods_price},
					  			       #{goods_sales_price},
					  			       #{goods_point},
					  			       #{goods_delivery_date},
					  			       #{goods_status},
								 	   #{goods_intro}
					 			       )
		]]>
	</insert> 
	<!-- #{goods_id} => 시퀀스에서 가져온 상품 번호를 추가합니다. -->
	<!-- #{goods_contents_order:VARCHAR} => CLOB 타입으로 데이터 입력 시 VARCHAR로 지정합니다. -->
	
		<!-- <selectKey> => 시퀀스에서 상품 이미지 번호를 미리 가져옵니다. -->
		<!-- CDATA 쿼리문 => 새 상품일 경우 첨부한 상품 이미지 정보를 저장합니다. -->
	<insert id="insertGoodsImageFile" parameterType="imageFileVO"   >
		<selectKey resultType="int" keyProperty="image_id" order="BEFORE">
	    	select seq_image_id.nextval from dual
	    </selectKey>
	    <![CDATA[
		   insert into gogi_goods_image (image_id,
		                                     goods_id,
											 file_name,
											 file_type,
											 reg_id,
											 credate)
									  values(#{image_id},
											 #{goods_id},
											 #{file_name},
											 #{reg_id},
											 #{file_type},
											 #{credate} )
		]]>
	</insert>
	
	<select id="selectNewGoodsList" resultMap="goodsResult"   parameterType="java.util.Map"  >
	    <![CDATA[
		  select * from (
			   select rowNum as recNum,
			   		  goods_id,
			          goods_name,
			          goods_seller,
			          goods_price,
			          to_char(goods_delivery_date,'YYYY-MM-DD') as creDate
			       from (
			             select goods_id,
			             		goods_name,
			             		goods_seller,
			             		goods_price,
			             		goods_delivery_date
			              from gogi_goods
			              where  to_char(goods_delivery_date,'YYYY-MM-DD')  between #{beginDate} and #{endDate}
			              order by goods_delivery_date desc
					      )
				 )							
			     where recNum between (#{section}-1)*100+ (#{pageNum}-1)*10+1 and (#{section}-1)*100+(#{pageNum})*10				        
    	]]>
	</select>
	
	<select id="selectOrderGoodsList" resultMap="orderGoodsResult" parameterType="java.util.Map"  >
		  select * from (
			    select rowNum as recNum,t.*
			       from (
			              select  *  from gogi_order
			              where to_char(order_time,'yyyy-mm-dd')  between #{beginDate} and #{endDate}
			                <if test="search_type=='orderer_id'">
			                  AND orderer_id=#{search_word}
			                </if>
			                <if test="search_type=='orderer_name'">
			                  AND orderer_name=#{search_word}
			                </if>
			                <if test="search_type=='orderer_hp_num'">
			                   AND pay_orderer_hp_num=#{search_word} 
			                </if>
			              order by PAY_ORDER_TIME desc
					    ) t
				)							
			where				
		recNum between (#{section}-1)*100+ (#{pageNum}-1)*10+1 and (#{section}-1)*100+(#{pageNum})*10				        
	</select>
	
	<select id="selectGoodsDetail" resultMap="goodsResult" parameterType="String">
	    <![CDATA[
	        select g.*, to_char(g.goods_delivery_date,'YYYY-MM-DD') as goods_delivery_date, d.file_name as fileName
	        from gogi_goods g, gogi_goods_image d
	        where g.goods_id = d.goods_id
	        and d.file_type = 'main_image'
	        and g.goods_id = #{goods_id}
	        order by g.goods_id
	    ]]>
	</select>
	
	<select id="selectGoodsImageFileList" resultMap="imageResult"   parameterType="String"  >
	    <![CDATA[
		    select * from  gogi_goods_image 
		    where goods_id=#{goods_id}
			order by image_id asc
    	]]>
	</select>	
	
	<!-- 상품 정보를 수정합니다. -->
	<update id="updateGoodsInfo" parameterType="java.util.HashMap" >
		   update gogi_goods
		    <set> 
		      <if test=" goods_sort!='' and goods_sort!=null">
		        goods_sort=#{goods_sort},
		      </if>
		      <if test=" goods_name!='' and goods_name!=null">
		        goods_name=#{goods_name},
		      </if>
		      <if test=" goods_price!='' and goods_price!=null">
		        goods_price=#{goods_price},
		      </if>
		      <if test=" goods_sales_price!='' and goods_sales_price!=null">
		        goods_sales_price=#{goods_sales_price},
		      </if>
		      <if test=" goods_point!='' and goods_point!=null">
		        goods_point=#{goods_point},
		      </if>
		      <if test=" goods_delivery_date!='' and goods_delivery_date!=null">
		        goods_delivery_date=#{goods_delivery_date},
		      </if>
		      <if test=" goods_status!='' and goods_status!=null">
		        goods_status=#{goods_status},
		      </if>
		      <if test=" goods_intro!='' and goods_intro!=null">
		        goods_intro=#{goods_intro}
		      </if>
		      
		     </set>
		    where 
		    goods_id=#{goods_id}
	
	</update>
	
	
	
	<!-- 상품 이미지 정보를 수정합니다. -->
	<update id="updateGoodsImage" parameterType="imageFileVO">
		update gogi_goods_image
		set file_name=#{file_name}
		where goods_id=#{goods_id} and image_id=#{image_id}
	</update>
	
	<!-- 주문한 상품을 변경합니다. -->
	<update id="updateOrderGoods" parameterType="java.util.HashMap" >
		update gogi_order
			<set> 
				<if test=" order_delivery_status!='' and order_delivery_status!=null">
					order_delivery_status=#{order_delivery_status},
				</if>
				<if test=" order_address!='' and order_address!=null">
					order_address=#{order_address},
				</if>
		    </set>
			    where 
			    order_id=#{order_id}
	</update>	
	
	
	<delete id="deleteGoods" parameterType="String">
		delete from gogi_goods
	  	where goods_id=#{goods_id}
	</delete>
	
	<delete id="deleteGoodsImage" parameterType="String">
	  delete from gogi_goods_image
	  where goods_id=#{goods_id}
	</delete>
		
</mapper>